int** levelOrder(struct Node* root, int* returnSize, int** returnColumnSizes) 
{
    if(root==NULL)
    {
       * returnSize=0;
       *returnColumnSizes = NULL;
       return NULL; 
    }
   struct Node**queue = malloc(sizeof(struct Node*)*10000);
   int rear = 0;
   int front = 0;
   int**arr = malloc(sizeof(int*)*1000);
   int size=0;
   int t_size=0;
   * returnColumnSizes = malloc(sizeof(int)*1000);
   queue[rear++]= root;
   while(front<rear)
   {
      int length = rear - front;
      (* returnColumnSizes)[size] = length;
      arr[size] = malloc(sizeof(int)*length);
      for(int i=0;i<length;i++)
      {
       struct Node*temp = queue[front++];
       arr[size][i] = temp->val;
         for(int j=0;j<temp->numChildren;j++)
         {
            if(temp->children[j]!=NULL)
            queue[rear++] = temp->children[j];
         }
      }
      size++;
   }
   //free(queue);
* returnSize=size;
return arr;
}
