#include<stdio.h>
#include<stdlib.h>

typedef struct node
{
    int data;
    struct node*left;
    struct node*right;
}node;

node*create()
{
    node*newnode;
    newnode=malloc(sizeof(node));
    printf("Enter data(press -1 to exit) : ");
    int data;
    scanf("%d",&data);
    if(data==-1)
    return 0;
    newnode->data=data;
    printf("entered left child of %d\n",data);
    newnode->left=create();
    printf("Entered right child of %d\n",data);
    newnode->right=create();
    return newnode;
}

void inorder(node*root)
{
    if(root==NULL)
    return;
    inorder(root->left);
    printf("%d ",root->data);
    inorder(root->right);
}
void postorder(node*root)
{
    if(root==NULL)
    return;
    postorder(root->left);
    postorder(root->right);
    printf("%d ",root->data);
}
void preorder(node*root)
{
    if(root==NULL)
    return;
    printf("%d ",root->data);
    preorder(root->left);
    preorder(root->right);
}

int main(){
    node*root=create();
    printf("Inorder representation of tree : ");
    inorder(root);
    printf("\nPost order representation of tree : ");
    postorder(root);
    printf("\nPreorder representation of tree : ");
    preorder(root);
}
